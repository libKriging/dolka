% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/max_qEI.R
\name{max_qEI}
\alias{max_qEI}
\title{Maximization of Multipoint Expected Improvement Criterion (qEI)}
\usage{
max_qEI(
  model,
  npoints,
  lower,
  upper,
  crit = c("exact", "CL"),
  minimization = TRUE,
  optimcontrol = NULL
)
}
\arguments{
\item{model}{An object in \code{\link[DiceKriging]{km-class}} as created
by using \code{\link[DiceKriging]{km}}.}

\item{npoints}{Integer representing the desired number of
iterations.}

\item{lower, upper}{Numeric vectors of lower and upper bounds.}

\item{crit}{Character \code{"exact"} or \code{"CL"} specifying the
criterion used. \code{"exact"} triggers the maximization of
the multipoint expected improvement at each iteration (see
\code{\link{max_qEI}}), \code{"CL"} applies the \emph{Constant
Liar} heuristic.}

\item{minimization}{Logical specifying if the qEI to be maximized
is used in minimization or in maximization.}

\item{optimcontrol}{an optional list of control parameters for
optimization. See details.}
}
\value{
A list with components:
\itemize{
\item{par}{ A matrix with its rows containing the \code{npoints}
            input vectors found.}
\item{value}{ A value giving the qEI computed in \code{par}.}
}
}
\description{
Maximization of the \code{\link{qEI}} criterion. This
    is a refactoring of the function from the \pkg{DiceOptim}
    package. However only the \code{"genoud"} method can be used
    for now. calls the function \code{\link{genoud}} using
    analytical formulae of \code{\link{qEI}} and its gradient
    \code{\link{qEI.grad}}.

The parameters of list \code{optimcontrol} include
\code{optimcontrol$method}, with character value \code{"BFGS"}
(default) or \code{"genoud"}, specifying the method used to
maximize the criterion. This is irrelevant when \code{crit} is
\code{"CL"} because this method always uses \code{genoud}.

\itemize{ 

    \item{\bold{When \code{crit == "CL"}}} {

         The elements of \code{optimcontrol} can have the following
         names and values.

         \itemize{

             \item{\bold{\code{parinit}} }{Optional numeric
                  matrix of initial values. Must have
                  \code{model@d} columns, the number of rows is not
                  constrained.
              }
 
              \item{\bold{\code{L}} }{ The "liar". Either a
                  character in \code{c("max", "min", "mean")}, or
                  a scalar value specifying the liar. For the
                  character values: \code{"min"} sets the liar to
                  \code{min(model@y)}, \code{"max"} set the liar to
                  \code{max(model@y)}, and "mean" set it to the
                  prediction of the model. When \code{L} is
                  \code{NULL}, it is replaced by \code{"min"} if
                  \code{minimization} is \code{TRUE}, or by \code{"max"}
                  otherwise.  }

              \item{\bold{Formal arguments of \code{\link{genoud}}}.}{
                  These include \code{pop.size} with
                  default : \code{3 * 2^d} when \code{d <
                  6} and \code{32 * d} otherwise, where \code{d}
                  is the number of inputs.  One can also use \code{max.generations}
                  (default: 12), \code{wait.generations} (default:
                  2) and \code{BFGSburnin} (default: 2).}  } }

    \item{\bold{When \code{optimcontrol$method == "BFGS"}} } {

         The elements of \code{optimcontrol} can have the
         following names and values.

         \itemize{

              \item{\bold{\code{nStarts}} } {(default: 4).}

              \item{\bold{\code{fastCompute}} } {Logical. If \code{TRUE}
                   (default), a fast
                   approximation method based on a semi-analytic
                   formula is used, see Marmin (2014) for details.}

             \item{\bold{\code{samplingFun}} } {A function which
                  samples a batch of starting point
                  Default : \code{\link{sampleFromEI}}.}
 
             \item{\bold{\code{parinit}} }{Optional 3d-array of
                  initial (or candidate)
                  batches. For each \code{k}, the slice \code{parinit[ , , k]}
                  is a matrix of size \code{c(npoints, d)}
                  representing one batch. The number of initial
                  batches \code{dim(parinit)[3]} is not
                  contrained and does not have to be equal to
                  \code{nStarts}. If there is too few initial
                  batches for \code{nStarts}, missing batches are
                  drawn with \code{samplingFun} (default
                  \code{NULL}).}
        }
    } 

    \item{\bold{When \code{optimcontrol$method = "genoud"}} }{
       \itemize{

           \item{\bold{\code{optimcontrol$fastCompute}} }{Logical. If
               \code{TRUE} (default), a fast approximation method
               based on a semi-analytic formula is used, see
               Marmin(2014) for details.}

           \item{\bold{\code{parinit}} }{
               Optional numeric matrix of candidate starting
               points (one row corresponds to one point).}
           \item{\bold{The formal arguments of the \code{\link{genoud}} function}} {
                Main parameters are \code{pop.size} (default:
                \code{50 * d * npoints}),
                \code{max.generations} (default: 5),
                \code{wait.generations} (default: 2),
                \code{BFGSburnin} (default: 2).
           }
       }
   }
}
}
\examples{
set.seed(0)
## 3-points EI maximization.
## 9-points factorial design, and the corresponding response
d <- 2; n <- 9
design.fact <- expand.grid(x1 = seq(0, 1, length = 3),
                           x2 = seq(0, 1, length = 3)) 
response.branin <- apply(design.fact, 1, branin)
lower <- c(0, 0); upper <- c(1, 1)

# number of point in the batch
batchSize <- 3

# model fit
fitted.model <- km(~1, design = design.fact, response = response.branin, 
                   covtype = "gauss",
                   control = list(pop.size = 50, trace = FALSE),
                   parinit = c(0.5, 0.5))

# maximization of qEI

## With a multistarted BFGS algorithm
## ==================================
\dontrun{
   ## XXXY does not work for now, need 'optim_cache'
    maxBFGS <- max_qEI(model = fitted.model, npoints = batchSize,
                       lower = lower, upper = upper, 
                       crit = "exact",
                       optimcontrol = list(nStarts = 3, method = "BFGS"))

## comparison
## ==========
print(maxBFGS$value)

}

## With a genetic algorithm using derivatives
maxGen  <- max_qEI(model = fitted.model, npoints = batchSize,
                   lower = lower, upper = upper, 
                   crit = "exact",
                   optimcontrol = list(nStarts = 3, method = "genoud",
                                       pop.size = 100, max.generations = 15))

\dontrun{

    ## With the constant liar heuristic
    maxCL   <- max_qEI(model = fitted.model, npoints = batchSize,
                       lower = lower, upper = upper,
                       crit = "CL",
                       optimcontrol = list(pop.size = 20))
    print(maxGen$value)
    print(maxCL$value)
}
}
\references{
C. Chevalier and D. Ginsbourger (2014) Learning and Intelligent
Optimization - 7th International Conference, Lion 7, Catania, Italy,
January 7-11, 2013, Revised Selected Papers, chapter Fast computation of
the multipoint Expected Improvement with applications in batch selection,
pages 59-69, Springer.

D. Ginsbourger, R. Le Riche, L. Carraro (2007), A Multipoint Criterion for
Deterministic Parallel Global Optimization based on Kriging. The
International Conference on Non Convex Programming, 2007.

D. Ginsbourger, R. Le Riche, and L. Carraro. Kriging is well-suited to
parallelize optimization (2010), In Lim Meng Hiot, Yew Soon Ong, Yoel
Tenne, and Chi-Keong Goh, editors, \emph{Computational Intelligence in
Expensive Optimization Problems}, Adaptation Learning and Optimization,
pages 131-162. Springer Berlin Heidelberg.

J. Mockus (1988), \emph{Bayesian Approach to Global Optimization}. Kluwer
academic publishers.

M. Schonlau (1997), \emph{Computer experiments and global optimization},
Ph.D. thesis, University of Waterloo.
}
\seealso{
\code{\link{qEI_with_grad}}.
}
\author{
Sébastien Marmin, Clément Chevalier and David Ginsbourger.
}
\keyword{optimize}
